# Estimate the Completed Partially Directed Acyclic Graph (CPDAG)
cpdag <- pc.stable(df)
# Plot the CPDAG to visualize the inferred causal relationships
plot(cpdag)
# Test for conditional independence of Y and A given C
ci.test(y, as.numeric(a), data.frame(c1, c2)) # Y depends on A given c1, c2
# Test for conditional independence of Y and A given C
ci.test(y, as.numeric(a), data.frame(z1, z2)) # Y depends on A given c1, c2
# Drawing a graph from the unobserved potential outcomes and the treatment variable
# undirected edges! but y1 is independent of T given c1,c2: weak unconfoundness is fulfilled
# Estimate a graph from the potential outcomes data
df2 <- as.data.frame(cbind(a, z1, z2, y1))
cpdag2 <- pc.stable(df2)
# Plot the graph
plot(cpdag2)
ci.test(y1, as.numeric(a), data.frame(c1, c2)) # y1 is independent of T given c1,c2: weak unconfoundedness is fulfilled
ci.test(y0, as.numeric(a), data.frame(c1, c2))
# Estimate the ATE --------------------------------------------------------
lm(y ~ z1 + z2 + a)
# Estimate the ATE --------------------------------------------------------
lm(y ~ a)
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, c(0,0, 0, 0), diag(4))
a <- rbinom(n, size = 1, prob = 0.5)
# z1 = a + alpha*z2 + error1
# z2 = alpha * z1 + error2. Substitute z2 into z1:
# z1 = a + alpha(alpha * z1 + error2) + error1
# z1 = a + alpha^2 * z1 + alpha*error2 + error1
# z1 = (a + alpha * error2 + error1)/(1 - alpha^2)
z1 <- a + error[,1]
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z1  + error[, 3]
y0 <- 2 + z1  + error[, 4]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~ z1 + a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, c(0,0, 0, 0), diag(4))
a <- rbinom(n, size = 1, prob = 0.5)
# z1 = a + alpha*z2 + error1
# z2 = alpha * z1 + error2. Substitute z2 into z1:
# z1 = a + alpha(alpha * z1 + error2) + error1
# z1 = a + alpha^2 * z1 + alpha*error2 + error1
# z1 = (a + alpha * error2 + error1)/(1 - alpha^2)
z1 <- (a + alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z2 <-  alpha * z1 + error[,2]
y1 <- 4 + z1  + error[, 3]
y0 <- 2 + z1  + error[, 4]
# Estimate the ATE --------------------------------------------------------
lm(y ~ z1 + z2 + a)
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~ z1 + z2 + a)
lm(y ~ z1 +  a)
lm(y ~ z1 +  a)
lm(y ~  a)
# Estimate DAGs from the observed and potential outcomes data -------------
# Estimate a graph from the observed data
df <- as.data.frame(cbind(a,  y))
# Drawing a graph from the unobserved potential outcomes and the treatment variable
# undirected edges! but y1 is independent of T given c1,c2: weak unconfoundness is fulfilled
# Estimate a graph from the potential outcomes data
df2 <- as.data.frame(cbind(a,  y1))
cpdag2 <- pc.stable(df2)
# Plot the graph
plot(cpdag2)
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
cor.test(y1, a)
cor.test(y0, a)
ci.test(y1, as.numeric(a), data.frame(z1)) # y1 is independent of T given c1,c2: weak unconfoundedness is fulfilled
ci.test(y0, as.numeric(a), data.frame(z1))
lm(y ~ z1 +  a)
lm(z1 ~a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, c(0,0, 0, 0), diag(4))
a <- rbinom(n, size = 1, prob = 0.5)
# z1 = a + alpha*z2 + error1
# z2 = alpha * z1 + error2. Substitute z2 into z1:
# z1 = a + alpha(alpha * z1 + error2) + error1
# z1 = a + alpha^2 * z1 + alpha*error2 + error1
# z1 = (a + alpha * error2 + error1)/(1 - alpha^2)
z1 <- 2*a + error[ ,2]
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z1  + error[, 3]
y0 <- 2 + z1  + error[, 4]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
lm(z1 ~ a)
lm(y ~  a)
lm(y ~  z1 + a)
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
lm(y ~  z1 + a)
lm(z1 ~ a)
lm(y ~  a)
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
z11 <- (a + alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z1 + error[,2]
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z1 = a + alpha*z2 + error1
# z2 = alpha * z1 + error2. Substitute z2 into z1:
# z1 = a + alpha(alpha * z1 + error2) + error1
# z1 = a + alpha^2 * z1 + alpha*error2 + error1
# z1 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (a + alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z1  + error[, 3]
y0 <- 2 + z1  + error[, 4]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
a
lm(y ~  a)
lm(y ~ z1 +  a)
lm(z1 ~ a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z1 = a + alpha*z2 + error1
# z2 = alpha * z1 + error2. Substitute z2 into z1:
# z1 = a + alpha(alpha * z1 + error2) + error1
# z1 = a + alpha^2 * z1 + alpha*error2 + error1
# z1 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (a + alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z1  + error[, 5]
y0 <- 2 + z1  + error[, 6]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
lm(y ~ z1 +  a)
lm(z1 ~ a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z1 = a + alpha*z2 + error1
# z2 = alpha * z1 + error2. Substitute z2 into z1:
# z1 = a + alpha(alpha * z1 + error2) + error1
# z1 = a + alpha^2 * z1 + alpha*error2 + error1
# z1 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (a + alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z11  + error[, 5]
y0 <- 2 + z01  + error[, 6]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
lm(y ~ z1 +  a)
lm(z1 ~ a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z1 = a + alpha*z2 + error1
# z2 = alpha * z1 + error2. Substitute z2 into z1:
# z1 = a + alpha(alpha * z1 + error2) + error1
# z1 = a + alpha^2 * z1 + alpha*error2 + error1
# z1 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z11  + error[, 5]
y0 <- 2 + z01  + error[, 6]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
lm(y ~ z1 +  a)
lm(z1 ~ a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z1 = a + alpha*z2 + error1
# z2 = alpha * z1 + error2. Substitute z2 into z1:
# z1 = a + alpha(alpha * z1 + error2) + error1
# z1 = a + alpha^2 * z1 + alpha*error2 + error1
# z1 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (2+alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z11  + error[, 5]
y0 <- 2 + z01  + error[, 6]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
lm(y ~ z1 +  a)
lm(z1 ~ a)
lm(y ~ z1 + z2  a)
lm(y ~ z1 + z2 + a)
lm(z1 ~ a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z11 = a + alpha*z2 + error1
# z12 = alpha * z1 + error2. Substitute z2 into z1:
# z11 = a + alpha(alpha * z1 + error2) + error1
# z11 = a + alpha^2 * z1 + alpha*error2 + error1
# z11 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (1+alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z11  + error[, 5]
y0 <- 2 + z01  + error[, 6]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
lm(y ~ z1 +  a)
lm(y ~ z1 + z2 + a)
lm(z1 ~ a)
2+2/(1-0.1^2)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z11 = a + alpha*z2 + error1
# z12 = alpha * z1 + error2. Substitute z2 into z1:
# z11 = a + alpha(alpha * z1 + error2) + error1
# z11 = a + alpha^2 * z1 + alpha*error2 + error1
# z11 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (1+alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z11  + error[, 5]
y0 <- 2 + z01  + error[, 6]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
lm(y ~ z1 +  a)
lm(y ~ z1 + z2 + a)
lm(z1 ~ a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z11 = a + alpha*z2 + error1
# z12 = alpha * z1 + error2. Substitute z2 into z1:
# z11 = a + alpha(alpha * z1 + error2) + error1
# z11 = a + alpha^2 * z1 + alpha*error2 + error1
# z11 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (3+alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
# Generate binary treatment that depends on c1 and c2
y1 <- 4 + z11  + error[, 5]
y0 <- 2 + z01  + error[, 6]
# Average treatment effect is equal to total effect of Ey1 - Ey0 = 4 + Ec1 + EC0 - (2 - Ec1 - EC0) = 4  - 2 = 2
mean(y1) - mean(y0)
# Observed variables
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
lm(y ~ z1 +  a)
lm(y ~ z1 + z2 + a)
lm(z1 ~ a)
2+3/(1-0.1^2)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a binary treatment, two confounders with a cyclic relationship, continuous outcome
# Graph is define by paths: c1 -> treat, c2 -> treat, c1 -> c2, c2 -> c1, c1 -> Y, c2 -> Y, treat -> Y
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z11 = a + alpha*z2 + error1
# z12 = alpha * z1 + error2. Substitute z2 into z1:
# z11 = a + alpha(alpha * z1 + error2) + error1
# z11 = a + alpha^2 * z1 + alpha*error2 + error1
# z11 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (3+alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
y1 <- 4 + z11  + error[, 5]
y0 <- 2 + z01  + error[, 6]
# Average treatment effect is
mean(y1) - mean(y0)
# Observed  outcome
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE --------------------------------------------------------
lm(y ~  a)
# Estimate the ATE
lm(y ~  z1 + z2 + a)
lm(yz1 ~    a)
lm(z1 ~    a)
# Generate data for a model with a cycle for which unconfoundness is fulfilled
# a->z1->y, z1->z2, z2->z1.
library(bnlearn)
# Generate data -----------------------------------------------------------
# Set a seed for reproducibility
library(MASS)
set.seed(123)
# Set the sample size
n <- 100000
alpha <-  0.1
# Define confounders c1, c2 with a cyclic relationship
error <- mvrnorm(n, rep(0,6), diag(6))
a <- rbinom(n, size = 1, prob = 0.5)
# z11 = a + alpha*z2 + error1
# z12 = alpha * z1 + error2. Substitute z2 into z1:
# z11 = a + alpha(alpha * z1 + error2) + error1
# z11 = a + alpha^2 * z1 + alpha*error2 + error1
# z11 = (a + alpha * error2 + error1)/(1 - alpha^2)
z11 <- (3+alpha*error[ ,2] + error[ ,1])/(1 - alpha^2)
z12 <-  alpha * z11 + error[,2]
z01 <- (alpha*error[ ,3] + error[ ,4])/(1 - alpha^2)
z02 <- alpha * z01 + error[,3]
# Observed mediator
z1 <- ifelse(a==1, z11, z01)
z2 <- ifelse(a==1, z12, z02)
y1 <- 4 + z11  + error[, 5]
y0 <- 2 + z01  + error[, 6]
# Average treatment effect is
mean(y1) - mean(y0)
# Observed  outcome
y <- ifelse(a == 1, y1, y0)
# Estimate the ATE
lm(y ~  a)
